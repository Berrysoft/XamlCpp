project(XamlUI CXX)

if(${BUILD_COCOA})
    if(CMAKE_VERSION VERSION_LESS 3.16)
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -x objective-c++")
    else()
        enable_language(OBJCXX)
    endif()
endif()

include_directories(include)
include_directories(../meta/include)
include_directories(${XAML_PRIVATE_INCLUDE_DIRS})

file(GLOB UI_HEADERS "include/xaml/ui/*.hpp")
file(GLOB UI_COCOA_HEADERS "include/xaml/ui/cocoa/*.h")

if(${BUILD_WINDOWS})
    file(GLOB UI_SOURCE "src/win/*.cpp")
elseif(${BUILD_COCOA})
    file(GLOB UI_SOURCE "src/cocoa/*.mm")
elseif(${BUILD_GTK3})
    file(GLOB UI_SOURCE "src/gtk3/*.cpp")
endif()

file(GLOB UI_SHARED_SOURCE "src/shared/*.cpp")

add_library(xaml_ui ${UI_SOURCE} ${UI_SHARED_SOURCE})
target_link_libraries(xaml_ui xaml_meta)
if(${BUILD_WINDOWS})
    target_link_libraries(xaml_ui gdiplus)
elseif(${BUILD_COCOA})
    target_link_libraries(xaml_ui "-framework Cocoa")
elseif(${BUILD_GTK3})
    target_link_libraries(xaml_ui ${GTK3_LIBRARIES})
endif()

if(NOT (CMAKE_VERSION VERSION_LESS 3.16))
    target_precompile_headers(xaml_ui PRIVATE include/internal/shared/pch.hpp)
endif()

install(FILES ${UI_HEADERS} DESTINATION include/xaml/ui)
if(${BUILD_COCOA})
    install(FILES ${UI_COCOA_HEADERS} DESTINATION include/xaml/ui/cocoa)
endif()
install(TARGETS xaml_ui DESTINATION lib EXPORT xaml_ui-targets)
install(EXPORT xaml_ui-targets DESTINATION lib/cmake/xaml_ui)

configure_file(cmake/xaml_ui-config.cmake.in ${PROJECT_BINARY_DIR}/xaml_ui-config.cmake @ONLY)
install(FILES ${PROJECT_BINARY_DIR}/xaml_ui-config.cmake DESTINATION lib/cmake/xaml_ui)

file(GLOB TEST_SOURCE "test/*.cpp")
if(${BUILD_WINDOWS})
    add_executable(ui_test WIN32 ${TEST_SOURCE})
else()
    add_executable(ui_test ${TEST_SOURCE})
endif()
target_link_libraries(ui_test xaml_ui)
target_link_libraries(ui_test xaml_meta)

if(NOT (CMAKE_VERSION VERSION_LESS 3.16))
    target_precompile_headers(ui_test REUSE_FROM xaml_ui)
endif()
