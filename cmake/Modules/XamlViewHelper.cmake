# target_add_view(target [FAKE] DESTINATION <path> VIEWS <view1> [view2 ...] [DEPENDS <depend1> [depend2 ...]] [SEARCH_PATHS <path1> [path2 ...]])
function(target_add_view target)
    set(TARGET_ADD_VIEW_OPTIONS FAKE)
    set(TARGET_ADD_VIEW_ONE_VALUE_ARGS DESTINATION)
    set(TARGET_ADD_VIEW_MULTI_VALUE_ARGS VIEWS DEPENDS SEARCH_PATHS)
    cmake_parse_arguments(TARGET_ADD_VIEW "${TARGET_ADD_VIEW_OPTIONS}" "${TARGET_ADD_VIEW_ONE_VALUE_ARGS}" "${TARGET_ADD_VIEW_MULTI_VALUE_ARGS}" ${ARGN})
    if(${TARGET_ADD_VIEW_FAKE})
        set(TARGET_ADD_VIEW_XAMLCPP_FAKE_OPTIONS "-f")
    else()
        set(TARGET_ADD_VIEW_XAMLCPP_FAKE_OPTIONS "")
    endif()
    set(TARGET_ADD_VIEW_XAMLCPP_SEARCH_PATHS "")
    foreach(P IN LISTS TARGET_ADD_VIEW_SEARCH_PATHS)
        list(APPEND TARGET_ADD_VIEW_XAMLCPP_SEARCH_PATHS "-L" "${P}")
    endforeach()
    foreach(P IN LISTS TARGET_ADD_VIEW_VIEWS)
        get_filename_component(P_NAME ${P} NAME)
        if(${TARGET_ADD_VIEW_FAKE})
            string(APPEND P_NAME ".g.fake.cpp")
        else()
            string(APPEND P_NAME ".g.cpp")
        endif()
        set(P_FULL_PATH ${TARGET_ADD_VIEW_DESTINATION}/${P_NAME})
        add_custom_command(
            OUTPUT ${P_FULL_PATH}
            DEPENDS ${TARGET_ADD_VIEW_DEPENDS}
            COMMAND ${XAMLCPP_PATH} ${P} -o ${P_FULL_PATH} --no-logo ${TARGET_ADD_VIEW_XAMLCPP_FAKE_OPTIONS} ${TARGET_ADD_VIEW_XAMLCPP_SEARCH_PATHS}
		)
        target_sources(${target} PRIVATE ${P_FULL_PATH})
    endforeach()
endfunction()
