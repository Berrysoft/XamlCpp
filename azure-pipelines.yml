trigger:
- master

variables:
  configuration: 'Release'

jobs:
- job: 'Build'
  strategy:
    matrix:
      windows:
        imageName: 'windows-latest'
        rid: 'win'
      linux:
        imageName: 'ubuntu-latest'
        rid: 'linux'
      mac:
        imageName: 'macos-latest'
        rid: 'mac'
  pool:
    vmImage: $(imageName)

  steps:
  - task: CmdLine@2
    displayName: 'Install linux dependencies'
    condition: eq(variables.rid, 'linux')
    inputs:
      script: |
        apt-get install dh-autoreconf libgles2-mesa-dev
        sudo apt install software-properties-common
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo apt-get install gcc-9 g++-9
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 90 --slave /usr/bin/g++ g++ /usr/bin/g++-9 --slave /usr/bin/gcov gcov /usr/bin/gcov-9

  - script: |
      git clone https://github.com/microsoft/vcpkg.git
      cd vcpkg
      bootstrap-vcpkg.bat -Win64
    displayName: 'Install vcpkg'
    condition: eq(variables.rid, 'win')

  - script: |
      git clone https://github.com/microsoft/vcpkg.git
      cd vcpkg
      ./bootstrap-vcpkg.sh
    displayName: 'Install vcpkg'
    condition: eq(variables.rid, 'linux')

  - script: |
      cd vcpkg
      vcpkg install libxml2:x64-windows wil:x64-windows
    displayName: 'Install libxml2 & wil'
    condition: eq(variables.rid, 'win')

  - script: |
      cd vcpkg
      ./vcpkg install gtk
    displayName: 'Install gtk'
    condition: eq(variables.rid, 'linux')

  - task: CMake@1
    displayName: 'Configure all projects'
    condition: eq(variables.rid, 'win')
    inputs:
      cmakeArgs: .. -DCMAKE_BUILD_TYPE=$(configuration) -DCMAKE_INSTALL_PREFIX=$(Build.ArtifactStagingDirectory)/$(rid) -DVCPKG_TARGET_TRIPLET=x64-windows -DCMAKE_TOOLCHAIN_FILE=$(Build.SourcesDirectory)/vcpkg/scripts/buildsystems/vcpkg.cmake

  - task: CMake@1
    displayName: 'Configure all projects'
    condition: eq(variables.rid, 'linux')
    inputs:
      cmakeArgs: .. -DCMAKE_BUILD_TYPE=$(configuration) -DCMAKE_INSTALL_PREFIX=$(Build.ArtifactStagingDirectory)/$(rid) -DCMAKE_TOOLCHAIN_FILE=$(Build.SourcesDirectory)/vcpkg/scripts/buildsystems/vcpkg.cmake

  - task: CMake@1
    displayName: 'Configure all projects'
    condition: eq(variables.rid, 'mac')
    inputs:
      cmakeArgs: .. -DCMAKE_BUILD_TYPE=$(configuration) -DCMAKE_INSTALL_PREFIX=$(Build.ArtifactStagingDirectory)/$(rid)

  - task: CMake@1
    displayName: 'Build all projects'
    inputs:
      cmakeArgs: --build . --target install --config $(configuration)

  - task: PublishBuildArtifacts@1
    displayName: 'Publish'
    inputs:
      artifactName: 'publish'
