trigger:
- master

jobs:
- job: 'Build'
  strategy:
    matrix:
      windows:
        imageName: 'windows-latest'
        plat: 'win'
        rid: 'win'
      windows_gtk:
        imageName: 'windows-latest'
        plat: 'win'
        rid: 'win-gtk'
      linux:
        imageName: 'ubuntu-latest'
        plat: 'linux'
        rid: 'linux'
      mac:
        imageName: 'macos-latest'
        plat: 'mac'
        rid: 'mac'
      mac_gtk:
        imageName: 'macos-latest'
        plat: 'mac'
        rid: 'mac-gtk'
  pool:
    vmImage: $(imageName)

  steps:
  - script: |
      vcpkg install libxml2:x64-windows wil:x64-windows
    displayName: 'Install libxml2 & wil'
    condition: eq(variables.rid, 'win')

  - script: |
      vcpkg install gtk:x64-windows
    displayName: 'Install gtk'
    condition: eq(variables.rid, 'win-gtk')

  - script: |
      sudo apt install software-properties-common
      sudo add-apt-repository ppa:ubuntu-toolchain-r/test
      sudo apt-get install gcc-9 g++-9 libgtk-3-dev ninja-build
      sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 90 --slave /usr/bin/g++ g++ /usr/bin/g++-9 --slave /usr/bin/gcov gcov /usr/bin/gcov-
    displayName: 'Install linux dependencies'
    condition: eq(variables.rid, 'linux')

  - script: |
      brew install ninja
    displayName: 'Install ninja'
    condition: eq(variables.plat, 'mac')

  - script: |
      brew install gtk+3 pkgconfig
    displayName: 'Install gtk'
    condition: eq(variables.rid, 'mac-gtk')

  - task: CMake@1
    displayName: 'Configure all projects'
    condition: eq(variables.plat, 'win')
    inputs:
      cmakeArgs: .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$(Build.ArtifactStagingDirectory)/$(rid) -DVCPKG_TARGET_TRIPLET=x64-windows -DCMAKE_TOOLCHAIN_FILE=$(VCPKG_INSTALLATION_ROOT)/scripts/buildsystems/vcpkg.cmake

  - task: CMake@1
    displayName: 'Configure all projects'
    condition: ne(variables.plat, 'win')
    inputs:
      cmakeArgs: .. -GNinja -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$(Build.ArtifactStagingDirectory)/$(rid)

  - task: CMake@1
    displayName: 'Install all projects'
    inputs:
      cmakeArgs: --build . --target install --config Release

  - task: CMake@1
    displayName: 'Configure all projects for Debug'
    condition: eq(variables.plat, 'win')
    inputs:
      workingDirectory: $(Build.ArtifactStagingDirectory)\build\debug
      cmakeArgs: .. -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=$(Build.ArtifactStagingDirectory)/$(rid)/debug -DVCPKG_TARGET_TRIPLET=x64-windows -DCMAKE_TOOLCHAIN_FILE=$(VCPKG_INSTALLATION_ROOT)/scripts/buildsystems/vcpkg.cmake

  - task: CMake@1
    displayName: 'Install all projects for Debug'
    condition: eq(variables.plat, 'win')
    inputs:
      workingDirectory: $(Build.ArtifactStagingDirectory)\build\debug
      cmakeArgs: --build . --target install --config Debug

  - task: PublishBuildArtifacts@1
    displayName: 'Publish'
    inputs:
      artifactName: 'publish'
